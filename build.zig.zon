.{
    // これはこのパッケージに依存する他のパッケージで使用されるデフォルトの名前です。
    // 例えば、ユーザーが `zig fetch --save <url>` を実行した場合、このフィールドの値が
    // `dependencies` テーブルのキーとして使われます。ユーザーは異なる名前を選択することも
    // できますが、ほとんどのユーザーはここで提供された名前をそのまま使用します。
    //
    // 名前に "zig" を含めるのは冗長です。なぜなら、この名前は既に Zig パッケージ名前空間内にあるからです。
    .name = "hello-zig-cli",

    // これは [Semantic Version](https://semver.org/) 形式のバージョンです。
    // 将来的に、このバージョンはパッケージの重複を避けるために使用されます。
    .version = "0.0.0",

    // このフィールドはオプションです。
    // 現在はアドバイザリー情報としてのみ機能し、Zig はまだこの値を使用しません。
    //.minimum_zig_version = "0.11.0",

    // このフィールドもオプションです。
    // 各依存パッケージは `url` と `hash`、または `path` のいずれかを提供する必要があります。
    // `zig build --fetch` を使用すると、パッケージのすべての依存関係を再帰的に取得できます。
    // すべての依存関係が取得されると、`zig build` ではインターネット接続が不要になります。
    .dependencies = .{
        // `zig fetch --save <url>` コマンドラインインターフェイスを使用して依存関係を追加します。
        //.example = .{
        //    // このフィールドを新しい URL に更新する場合は、対応する `hash` を削除する必要があります。
        //    // そうしないと、新しい URL に古いハッシュがあると期待していると見なされます。
        //    .url = "https://example.com/foo.tar.gz",
        //
        //    // これは `url` から取得し、`paths` で指定されたルールを適用した後の
        //    // ディレクトリのファイル内容から計算される値です。
        //    //
        //    // このフィールドは信頼できるソースであり、パッケージは `url` から来るのではなく、
        //    // `hash` から取得されます。`url` は、この `hash` に一致するパッケージを
        //    // 取得するためのミラーの 1 つにすぎません。
        //    //
        //    // [multihash](https://multiformats.io/multihash/) 形式を使用します。
        //    .hash = "...",
        //
        //    // 指定された場合、ビルドルートからの相対ディレクトリ内でパッケージを見つけます。
        //    // この場合、パッケージの `hash` は無関係であり、計算されません。
        //    // このフィールドと `url` は相互に排他的です。
        //    .path = "foo",

        //    // `true` に設定すると、依存パッケージは遅延取得されることを宣言します。
        //    // つまり、この依存関係は実際に使用される場合にのみ取得されます。
        //    .lazy = false,
        //},
    },

    // このパッケージに含めるファイルおよびディレクトリのセットを指定します。
    // ここにリストされているファイルとディレクトリのみが、このパッケージの `hash` の計算に含まれます。
    // また、Zig パッケージマネージャーを使用する際にディスク上に残るのはリストされたファイルのみです。
    // 基本的には、コンパイルに必要なファイルとライセンスファイルをリストするのが推奨されます。
    // パスはビルドルートからの相対パスです。ビルドルート自体を指すには空文字列 (`""`) を使用します。
    // ここにディレクトリをリストした場合、その中のファイルはすべて再帰的に含まれます。
    .paths = .{
        "build.zig",
        "build.zig.zon",
        "src",
        // 例えば…
        //"LICENSE",
        //"README.md",
    },
}
